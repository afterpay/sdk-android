plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlinx-serialization"
}

android {
    compileSdkVersion versions.compile_sdk
    buildToolsVersion versions.build_tools

    defaultConfig {
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.compile_sdk
        buildConfigField 'String', 'AfterpayLibraryVersion', "\"$VERSION_NAME\""

        consumerProguardFiles 'consumer-rules.pro'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = versions.java
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinx_coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:${versions.kotlinx_serialization}"
    implementation "androidx.appcompat:appcompat:${versions.app_compat}"
    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    implementation "com.squareup.moshi:moshi-kotlin:${versions.moshi}"
    implementation "com.squareup.moshi:moshi-adapters:${versions.moshi}"
    testImplementation "junit:junit:${versions.junit}"
}

apply plugin: 'com.vanniktech.maven.publish'

tasks.withType(Sign) {
    onlyIf { !version.endsWith("SNAPSHOT") }
}

signing {
    useInMemoryPgpKeys(
        findProperty('signingKeyId'),
        findProperty('signingKey'),
        findProperty('signingPassword')
    )
}
